=begin
#Retrotax TCID

#No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 2017-03-07T10:58:26Z

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = SwaggerClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instact of DefaultApi' do
      expect(@instance).to be_instance_of(SwaggerClient::DefaultApi)
    end
  end

  # unit tests for application_statuses_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [ApplicationStatusesList]
  describe 'application_statuses_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for application_statuses_status_code_get
  # 
  # 
  # @param status_code 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [ApplicationStatus]
  describe 'application_statuses_status_code_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authentication_delete
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_api_key 
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'authentication_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authentication_oauth_login_url_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'authentication_oauth_login_url_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authentication_post
  # 
  # 
  # @param sign_in_request 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_api_key 
  # @option opts [String] :x_auth_iv 
  # @return [SignInResponse]
  describe 'authentication_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authentication_user_details_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'authentication_user_details_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for branches_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [BranchesResponse]
  describe 'branches_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for clients_client_id_put
  # 
  # 
  # @param client_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'clients_client_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_company_id_get
  # 
  # 
  # @param company_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [CompanyResponse]
  describe 'companies_company_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_company_id_locations_get
  # 
  # 
  # @param company_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [LocationsResponse]
  describe 'companies_company_id_locations_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_company_id_locations_location_id_get
  # 
  # 
  # @param location_id 
  # @param company_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_key 
  # @return [Location]
  describe 'companies_company_id_locations_location_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_company_id_locations_location_id_put
  # 
  # 
  # @param location_id 
  # @param company_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'companies_company_id_locations_location_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_company_id_locations_post
  # 
  # 
  # @param company_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_api_key 
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'companies_company_id_locations_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_company_id_put
  # 
  # 
  # @param company_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'companies_company_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [CompaniesResponse]
  describe 'companies_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_post
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_api_key 
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'companies_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employees_employee_id_documents_get
  # 
  # 
  # @param employee_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @option opts [String] :status 
  # @return [Documents]
  describe 'employees_employee_id_documents_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employees_employee_id_documents_post
  # 
  # 
  # @param employee_id 
  # @param post_document 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [DocumentCreateResponse]
  describe 'employees_employee_id_documents_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employees_employee_id_esign_put
  # 
  # 
  # @param employee_id 
  # @param esign 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [Employee]
  describe 'employees_employee_id_esign_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employees_employee_id_get
  # 
  # 
  # @param employee_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [EmployeeResponse]
  describe 'employees_employee_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employees_employee_id_pay_entries_get
  # 
  # 
  # @param employee_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [PayEntriesResponse]
  describe 'employees_employee_id_pay_entries_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employees_employee_id_pay_entries_pay_entry_id_delete
  # 
  # 
  # @param pay_entry_id 
  # @param employee_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'employees_employee_id_pay_entries_pay_entry_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employees_employee_id_pay_entries_pay_entry_id_put
  # 
  # 
  # @param pay_entry_id 
  # @param employee_id 
  # @param post_pay_entry_request 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [PostPayEntryResponse]
  describe 'employees_employee_id_pay_entries_pay_entry_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employees_employee_id_pay_entries_post
  # 
  # 
  # @param employee_id 
  # @param post_pay_entry_request 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [PostPayEntryResponse]
  describe 'employees_employee_id_pay_entries_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employees_employee_id_put
  # 
  # 
  # @param employee_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [EmployeeResponse]
  describe 'employees_employee_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employees_geo_qualify_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @option opts [String] :full_address 
  # @option opts [String] :zip_code 
  # @return [nil]
  describe 'employees_geo_qualify_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employees_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :state 
  # @option opts [String] :missing_documents 
  # @option opts [String] :suppl_program_status 
  # @option opts [String] :address 
  # @option opts [String] :city 
  # @option opts [String] :location_id 
  # @option opts [String] :status 
  # @option opts [String] :search 
  # @option opts [String] :location 
  # @option opts [String] :per_page 
  # @option opts [String] :ssn 
  # @option opts [String] :missing_docs 
  # @option opts [String] :x_auth_iv 
  # @option opts [String] :from_date 
  # @option opts [String] :missing_hm_info 
  # @option opts [String] :user 
  # @option opts [String] :qualifications 
  # @option opts [String] :first_name 
  # @option opts [String] :last_name 
  # @option opts [String] :zone_status 
  # @option opts [String] :x_auth_token 
  # @option opts [String] :is_qualified 
  # @option opts [String] :application_status 
  # @option opts [String] :is_advanced_search 
  # @option opts [String] :include_nq 
  # @option opts [String] :employee_id 
  # @option opts [String] :company 
  # @option opts [String] :to_date 
  # @option opts [String] :page 
  # @option opts [String] :zip 
  # @return [EmployeesResponse]
  describe 'employees_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for employees_post
  # 
  # 
  # @param employee 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [EmployeeResponse]
  describe 'employees_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for occupations_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [OccupationsResponse]
  describe 'occupations_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for processor_stats_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'processor_stats_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reports_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :to_date 
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @option opts [String] :location_id 
  # @option opts [String] :from_date 
  # @return [nil]
  describe 'reports_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for states_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [StatesResponse]
  describe 'states_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for states_state_code_counties_get
  # 
  # 
  # @param state_code 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [CountiesResponse]
  describe 'states_state_code_counties_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for subscriptions_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [Subscriptions]
  describe 'subscriptions_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for subscriptions_post
  # 
  # 
  # @param post_subscription 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [Subscriptions]
  describe 'subscriptions_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for subscriptions_subscription_id_delete
  # 
  # 
  # @param subscription_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [Subscriptions]
  describe 'subscriptions_subscription_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for subscriptions_subscription_id_get
  # 
  # 
  # @param subscription_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [GetSubscription]
  describe 'subscriptions_subscription_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for subscriptions_subscription_id_put
  # 
  # 
  # @param subscription_id 
  # @param post_subscription 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [Subscriptions]
  describe 'subscriptions_subscription_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for subscriptions_types_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [SubscriptionTypes]
  describe 'subscriptions_types_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for supplementary_program_statuses_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'supplementary_program_statuses_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for supplementary_program_statuses_status_code_get
  # 
  # 
  # @param status_code 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'supplementary_program_statuses_status_code_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for supplementary_programs_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [SupplementaryPrograms]
  describe 'supplementary_programs_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for supplementary_programs_supplementary_program_code_get
  # 
  # 
  # @param supplementary_program_code 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [SupplementaryProgram]
  describe 'supplementary_programs_supplementary_program_code_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for target_groups_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [TargetGroups]
  describe 'target_groups_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for target_groups_target_group_code_get
  # 
  # 
  # @param target_group_code 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [TargetGroup]
  describe 'target_groups_target_group_code_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_change_password_put
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'users_change_password_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_forgot_password_post
  # 
  # 
  # @param forgot_password 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'users_forgot_password_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_forgot_username_post
  # 
  # 
  # @param forgot_username 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'users_forgot_username_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'users_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_post
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_api_key 
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'users_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_put
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'users_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for zone_statuses_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'zone_statuses_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for zone_statuses_status_code_get
  # 
  # 
  # @param status_code 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [nil]
  describe 'zone_statuses_status_code_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for zones_get
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [Zones]
  describe 'zones_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for zones_zone_code_get
  # 
  # 
  # @param zone_code 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_auth_token 
  # @option opts [String] :x_auth_iv 
  # @return [Zone]
  describe 'zones_zone_code_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
